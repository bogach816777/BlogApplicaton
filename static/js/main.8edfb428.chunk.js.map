{"version":3,"sources":["hooks/useAxiosFetch.js","hooks/useWindowSize.js","Header.js","Nav.js","Footer.js","Post.js","Feed.js","Home.js","NewPost.js","Missing.js","PostPage.js","EditPost.js","About.js","App.js","api/posts.js","store.js","index.js"],"names":["useAxiosFetch","dataUrl","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","fetchError","setfetchError","_useState5","_useState6","isLoading","setisLoading","useEffect","isMounted","source","axios","CancelToken","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","wrap","_context","prev","next","get","cancelToken","token","sent","t0","message","finish","stop","_x","apply","arguments","fetchData","cancel","useWindowSize","width","undefined","heigth","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","title","_jsxs","className","children","_jsx","FaMobileAlt","FaTabletAlt","FaLaptop","Nav","posts","useStoreState","state","search","setSearch","useStoreActions","actions","setSearchResults","filteredResults","filter","post","body","toLocaleLowerCase","includes","reverse","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","value","onChange","target","Link","to","Footer","postCount","Post","concat","datetime","length","slice","Feed","_Fragment","map","Home","searchResults","style","color","NewPost","postTitle","postBody","savePost","setPostTitle","setPostBody","history","useHistory","handleSubmit","format","Date","push","action","required","name","cols","rows","Missing","PostPage","useParams","deletePost","getPostById","handleDelete","onClick","EditPost","editTitle","editBody","editPost","setEditTitle","setEditBody","handleEdit","About","marginTop","App","setPosts","_useAxiosFetch","Switch","Route","exact","path","component","create","baseURL","createStore","payload","computed","find","toString","thunk","newPost","helpers","_helpers$getState","getState","api","_toConsumableArray","console","log","_x2","_x3","_ref2","_callee2","_helpers$getState2","_context2","delete","_x4","_x5","_x6","_ref3","_callee3","updatedPost","_helpers$getState3","_context3","put","_objectSpread","_x7","_x8","_x9","ReactDOM","render","React","StrictMode","StoreProvider","store","Router","document","getElementById"],"mappings":"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","file":"static/js/main.8edfb428.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n\r\n    const [data, setData] = useState([])\r\n    const [fetchError, setfetchError] = useState(null)\r\n    const [isLoading, setisLoading] = useState(null)\r\n    useEffect(()=>{\r\n        let isMounted = true;\r\n        const source = axios.CancelToken.source();\r\n        const fetchData = async (url)=>{\r\n            setisLoading(true);\r\n            try{\r\n                const response = await axios.get(url, {\r\n                    cancelToken: source.token\r\n                });\r\n                if(isMounted){\r\n                    setData(response.data);\r\n                    setfetchError(null)\r\n                }\r\n            }catch(err){\r\n                if (isMounted){\r\n                    setfetchError(err.message);\r\n                    setData([]);\r\n                }\r\n            } finally{\r\n                isMounted && setisLoading(false)\r\n\r\n            }\r\n        }\r\n        fetchData(dataUrl)\r\n\r\n        const cleanUp = ()=>{\r\n            \r\n            isMounted = false;\r\n            source.cancel();\r\n        }\r\n        return cleanUp;\r\n    }, [dataUrl])\r\n\r\n    return {data, fetchError, isLoading}\r\n\r\n}\r\n\r\nexport default useAxiosFetch\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowSize = ()=>{\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: undefined,\r\n        heigth: undefined\r\n    });\r\n    useEffect (()=>{\r\n        const handleResize = ()=>{\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                heigth: window.innerHeight\r\n            })\r\n        }\r\n        handleResize()\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n       \r\n\r\n        return () =>window.removeEventListener(\"resize\", handleResize) ;\r\n    },[])\r\n    return windowSize;\r\n}\r\nexport default useWindowSize;","import {FaLaptop, FaTabletAlt, FaMobileAlt} from 'react-icons/fa'\nimport { useContext } from 'react'\nimport DataContext from './context/DataContext'\nimport useWindowSize from './hooks/useWindowSize'\nconst Header = ({ title }) => {\n    const {width} = useWindowSize();\n    return (\n        <header className=\"Header\">\n            <h1>{title}</h1>\n            {width <768 ? <FaMobileAlt /> \n            : width <992 ? <FaTabletAlt/>\n            : <FaLaptop/>}\n        </header>\n    )\n}\n\nexport default Header\n","import { Link } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useStoreActions, useStoreState } from 'easy-peasy';\nconst Nav = () => {\n    const posts = useStoreState((state)=> state.posts)\n    const search = useStoreState((state)=> state.search)\n    const setSearch = useStoreActions((actions)=> actions.setSearch)\n    const setSearchResults = useStoreActions((actions)=> actions.setSearchResults)\n\n\n    useEffect(()=>{\n        const filteredResults = posts.filter(post=>((post.body.toLocaleLowerCase()).includes(search.toLocaleLowerCase()))\n        ||((post.title.toLocaleLowerCase()).includes(search.toLocaleLowerCase())))\n          setSearchResults(filteredResults.reverse());\n      },[posts, search, setSearchResults])\n    return (\n        <nav className=\"Nav\">\n            <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\n                <label htmlFor=\"search\">Search Posts</label>\n                <input\n                    id=\"search\"\n                    type=\"text\"\n                    placeholder=\"Search Posts\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n            </form>\n            <ul>\n                <li><Link to=\"/\">Home</Link></li>\n                <li><Link to=\"/post\">Post</Link></li>\n                <li><Link to=\"/about\">About</Link></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav\n","import { useStore, useStoreState } from \"easy-peasy\";\nconst Footer = () => {\n    const postCount = useStoreState((state)=> state.postCount);\n\n    return (\n        <footer className='Footer'>\n            <p>{postCount} Blog Posts</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom';\n\nconst Post = ({ post }) => {\n    return (\n        <article className=\"post\">\n            <Link to={`/post/${post.id}`}>\n               <h2>{post.title}</h2>\n               <p className='postDate'>{post.datetime}</p>\n             </Link>\n             <p className='postBody'>{\n                (post.body).length <55 ?\n                post.body\n                : `${(post.body).slice(0,25)}...`}</p>   \n        </article>\n    )\n}\n\nexport default Post\n","import Post from './Post';\n\nconst Feed = ({ posts }) => {\n    return (\n        <>\n            {posts.map(post=> (\n                <Post key={post.id} post ={post} />\n            ))}\n        </>\n    )\n}\n\nexport default Feed\n","import Feed from './Feed';\nimport { useStoreState } from 'easy-peasy';\n\nconst Home = ({ isLoading, fetchError }) => {\n    const searchResults = useStoreState((state) => state.searchResults);\n\n    return (\n        <main className=\"Home\">\n            {isLoading && <p className=\"statusMsg\">Loading posts...</p>}\n            {!isLoading && fetchError && <p className=\"statusMsg\" style={{ color: \"red\" }}>{fetchError}</p>}\n            {!isLoading && !fetchError && (searchResults.length ? <Feed posts={searchResults} /> : <p className=\"statusMsg\">No posts to display.</p>)}\n        </main>\n    )\n}\n\nexport default Home","\nimport { useStoreState, useStoreActions, action  } from 'easy-peasy';\nimport { format } from 'date-fns';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nconst NewPost = () => {\n    const posts = useStoreState((state)=> state.posts);\n    const postTitle = useStoreState((state)=> state.postTitle);\n    const postBody = useStoreState((state)=> state.postBody);\n    const savePost = useStoreActions((actions)=> actions.savePost)\n    const setPostTitle = useStoreActions((actions)=> actions.setPostTitle)\n    const setPostBody = useStoreActions((actions)=> actions.setPostBody)\n\n    const history = useHistory()\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        const id = posts.length ? posts[posts.length -1].id +1 :1;\n        const datetime = format(new Date(), 'MMMM dd, yyyy pp');\n        const newPost = {id, title: postTitle, datetime, body:postBody};\n        savePost(newPost);\n        history.push('/')\n    \n      }\n    return (\n        <main className=\"NewPost\">\n            <h2>New Post</h2>\n            <form\n            onSubmit={handleSubmit} \n            className=\"newPostForm\" action=\"\">\n                <label htmlFor=\"postTitle\">Title: </label>\n                <input type=\"text\"\n                id=\"postTitle\"\n                required\n                value={postTitle}\n                onChange={(e)=> setPostTitle(e.target.value)} />\n                <label htmlFor=\"postBody\">Post:</label>\n                <textarea name=\"\" id=\"postBody\"\n                required\n                value={postBody}\n                onChange={(e)=> setPostBody(e.target.value)}\n                 cols=\"30\" rows=\"10\"></textarea>\n                 <button type=\"submit\">Submit</button>\n            </form>\n        </main>\n    )\n}\n\nexport default NewPost\n","import { Link } from 'react-router-dom';\n\nconst Missing = () => {\n    return (\n        <main className='Missing'>\n             <h2>Post not found</h2>\n                <p>Well, that's dissappointing</p>\n                <p>\n                    <Link to ='/'>Visit Our Homepage\n                    </Link>\n                </p>\n        </main>\n    )\n}\n\nexport default Missing\n","import { useParams, Link, useHistory } from \"react-router-dom\";\nimport Missing from \"./Missing\";\nimport { useStoreState, useStoreActions  } from 'easy-peasy';\nconst PostPage = () => {\n   \n    const { id } = useParams();\n    const history = useHistory()\n    const deletePost = useStoreActions((actions)=> actions.deletePost);\n    const getPostById = useStoreState((state)=> state.getPostById)\n    const post = getPostById(id);\n    const handleDelete = async (id)=>{\n        deletePost(id);\n      history.push('/')\n      }\n    return (\n        <main className=\"PostPage\">\n            <article className=\"post\">\n                {post && \n                    <>\n                        <h2>{post.title}</h2>\n                        <p className=\"postDate\">{post.datetime}</p>\n                        <p className=\"postBody\">{post.body}</p>\n                        <Link to={`/edit/${post.id}`} ><button className=\"editButton\">Edit Post</button></Link>\n                        <button className=\"deleteButton\" onClick={()=> handleDelete(post.id)}>\n                            Delete Post\n                        </button>\n\n                    </>\n                }\n                {!post &&\n                    <>\n                        <Missing/>\n                     </>\n                }\n            </article>\n            \n        </main>\n    )\n}\n\nexport default PostPage\n","import { useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { format } from 'date-fns';\r\nimport { useStoreState, useStoreActions } from 'easy-peasy';\r\n\r\nconst EditPost = () => {\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n    const editTitle = useStoreState((state) => state.editTitle);\r\n    const editBody = useStoreState((state) => state.editBody);\r\n\r\n    const editPost = useStoreActions((actions) => actions.editPost);\r\n    const setEditTitle = useStoreActions((actions) => actions.setEditTitle);\r\n    const setEditBody = useStoreActions((actions) => actions.setEditBody);\r\n\r\n    const getPostById = useStoreState((state) => state.getPostById);\r\n    const post = getPostById(id);\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            setEditTitle(post.title);\r\n            setEditBody(post.body);\r\n        }\r\n    }, [post, setEditTitle, setEditBody])\r\n\r\n\r\n    const handleEdit = (id) => {\r\n        const datetime = format(new Date(), 'MMMM dd, yyyy pp');\r\n        const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n        editPost(updatedPost);\r\n        history.push(`/`);\r\n    }\r\n\r\n    return (\r\n        <main className=\"NewPost\">\r\n            {editTitle &&\r\n                <>\r\n                    <h2>Edit Post</h2>\r\n                    <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n                        <label htmlFor=\"postTitle\">Title:</label>\r\n                        <input\r\n                            id=\"postTitle\"\r\n                            type=\"text\"\r\n                            required\r\n                            value={editTitle}\r\n                            onChange={(e) => setEditTitle(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"postBody\">Post:</label>\r\n                        <textarea\r\n                            id=\"postBody\"\r\n                            required\r\n                            value={editBody}\r\n                            onChange={(e) => setEditBody(e.target.value)}\r\n                        />\r\n                        <button type=\"button\" onClick={() => handleEdit(post.id)}>Submit</button>\r\n                    </form>\r\n                </>\r\n            }\r\n            {!editTitle &&\r\n                <>\r\n                    <h2>Post Not Found</h2>\r\n                    <p>Well, that's disappointing.</p>\r\n                    <p>\r\n                        <Link to='/'>Visit Our Homepage</Link>\r\n                    </p>\r\n                </>\r\n            }\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default EditPost","const About = () => {\n    return (\n        <main className='About'>\n            <h2>About</h2>\n            <p style={{ marginTop: \"1rem\" }}>This blog app is a project in the Learn React tutorial series.</p>\n        </main>\n    )\n}\n\nexport default About\n","import Header from './Header';\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport Home from './Home';\nimport NewPost from './NewPost';\nimport PostPage from './PostPage';\nimport EditPost from './EditPost';\nimport About from './About';\nimport Missing from './Missing';\nimport { Route, Switch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport useAxiosFetch from './hooks/useAxiosFetch';\nimport { action, useStoreActions } from 'easy-peasy';\n\n\n//npm i date fns -S\n// npx json-server -p 3500 -w data/db.json\nfunction App() {\n  const setPosts = useStoreActions((actions)=> actions.setPosts)\n  const [searchResults, setSearchResults] = useState([]);\n\n  const {data, fetchError, isLoading} = useAxiosFetch('http://localhost:3500/posts')\n  useEffect(()=>{\n    setPosts(data);\n  }, [data, setPosts])\n\n  return (\n    <div className=\"App\">\n      \n        <Header title=\"Blog application\" />\n        \n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" >\n            <Home\n            isLoading ={isLoading}\n            fetchError ={fetchError} \n            />\n          </Route>\n          <Route exact path=\"/post\" component={NewPost}>\n\n          </Route>\n          <Route exact path=\"/edit/:id\" component={EditPost}>\n        \n          </Route>\n          <Route path=\"/post/:id\" component={PostPage}>\n            \n          </Route>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"*\" component={Missing} />\n        </Switch>\n        \n        <Footer />\n     \n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3500'\r\n})","import { createStore, action, thunk, computed } from \"easy-peasy\";\r\nimport api from './api/posts'\r\n\r\nexport default createStore({\r\n    posts: [],\r\n    setPosts: action ((state, payload)=>{\r\n        state.posts = payload;\r\n    }),\r\n    postTitle: '',\r\n    setPostTitle: action((state, payload) => {\r\n        state.postTitle = payload;\r\n    }),\r\n    postBody: '',\r\n    setPostBody: action((state, payload) => {\r\n        state.postBody = payload;\r\n    }),\r\n    editTitle: '',\r\n    setEditTitle: action((state, payload) => {\r\n        state.editTitle = payload;\r\n    }),\r\n    editBody: '',\r\n    setEditBody: action((state, payload) => {\r\n        state.editBody = payload;\r\n    }),\r\n    search: '',\r\n    setSearch: action((state, payload) => {\r\n        state.search = payload;\r\n    }),\r\n    searchResults: [],\r\n    setSearchResults: action((state, payload) => {\r\n        state.searchResults = payload;\r\n    }),\r\n    postCount: computed((state)=> state.posts.length),\r\n    getPostById: computed((state)=>{\r\n        return (id)=> state.posts.find(post=> (post.id).toString() ===id)\r\n    }),\r\n    savePost: thunk(async (actions, newPost, helpers)=>{\r\n        const {posts} = helpers.getState();\r\n        try{\r\n            const response = await api.post('/posts', newPost);\r\n           \r\n            actions.setPosts([...posts, response.data]);\r\n            actions.setPostTitle('');\r\n            actions.setPostBody('');\r\n            \r\n          }catch (err){\r\n            console.log(`Error: ${err.message}`);\r\n          }\r\n    }),\r\n    deletePost: thunk(async (actions, id, helpers)=>{\r\n        const {posts} = helpers.getState();\r\n        try {\r\n            await api.delete(`/posts/${id}`);\r\n            actions.setPosts(posts.filter(post=> post.id !==id));\r\n          \r\n          } catch (err){\r\n            console.log(`Error: ${err.message}`);\r\n          }\r\n    }),\r\n    editPost: thunk(async (actions, updatedPost, helpers)=>{\r\n        const {posts} = helpers.getState();\r\n        const {id} = updatedPost;\r\n        try {\r\n            const response = await api.put(`/posts/${id}`, updatedPost);\r\n            actions.setPosts(posts.map(post => post.id ===id ? {...response.data} : post));\r\n            actions.setEditTitle('')\r\n            actions.setEditBody('');\r\n          }catch (err){\r\n          console.log(`Error: ${err.message}`);\r\n        }\r\n    })\r\n\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { StoreProvider } from 'easy-peasy';\nimport store from './store';\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <Router>\n        <Route path=\"/\" component={App} />\n      </Router>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}